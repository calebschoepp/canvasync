@startuml Class Diagram
skinparam classAttributeIconSize 0

' Controllers
class ActionController::Base {}

class ApplicationController {
    +user_not_authorized() : void
    +after_sign_out_path_for() : void
}

class NotebooksController {
    +notebook : Notebook
    +index() : void
    +show() : void
    +new() : void
    +edit() : void
    +preview() : void
    +create() : void
    +update() : void
    +join() : void
    -set_notebook() : void
    -notebook_params() : void
}

class DeviseController {
}

class SessionsController {
    +new() : void
    +create(email: String, password: String) : void
}

class RegistrationsController {
    +new() : void
    +create(email: String, password: String) : void
}

ActionController::Base <|-- ApplicationController
ApplicationController <|-- NotebooksController
ApplicationController <|-- DeviseController
DeviseController <|-- SessionsController
DeviseController <|-- RegistrationsController

' Models
class ActiveRecord::Base {}

class ApplicationRecord {
    +save() : void
}

class Diff {
    +layer_id : Integer
    +seq : Integer
    +data : Json
    +created_at : Datetime
    +updated_at : Datetime
}

class Layer {
    +page_id : Integer
    +writer_id : Integer
    +created_at : Datetime
    +updated_at : Datetime
}

class Notebook {
    +name : String
    +created_at : Datetime
    +updated_at : Datetime
}

class Page {
    +number : Integer
    +notebook_id : Integer
    +created_at : Datetime
    +updated_at : Datetime
}

class Role {
    +name : String
    +resource_type : String
    +resource_id : Integer
    +created_at : Datetime
    +updated_at : Datetime
}

class UserNotebook {
    +user_id : Integer
    +notebook_id : Integer
    +is_owner : Boolean
    +created_at : Datetime
    +updated_at : Datetime
    {static} +find_owned_by_user_id(user_id: Integer) : Array<UserNotebook>
    {static} +find_joined_by_user_id(user_id: Integer) : Array<UserNotebook>
}

class User {
    +email : String
    +encrypted_password : String
    +reset_password_token : String
    +reset_password_sent_at : Datetime
    +remember_created_at : Datetime
    +sign_in_count : Integer
    +current_sign_in_at : Datetime
    +last_sign_in_at : Datetime
    +current_sign_in_ip : String
    +last_sign_in_ip : String
    +created_at : Datetime
    +updated_at : Datetime
    +set_session(at: Datetime, ip: String) : void
    {static} +new(email: String, password: String): User
    {static} +find_by_email(email: String) : User
}

ActiveRecord::Base <|-- ApplicationRecord
Diff <|-- ApplicationRecord
Layer <|-- ApplicationRecord
Notebook <|-- ApplicationRecord
Page <|-- ApplicationRecord
Role <|-- ApplicationRecord
UserNotebook <|-- ApplicationRecord
User <|-- ApplicationRecord

' Channels
class ActionCable::Channel::Base {}

class Channel {}

class LayerChannel {
    +subscribed() : void
    +unsubscribed() : void
}

class PageChannel {
    +subscribed() : void
    +unsubscribed() : void
}

ActionCable::Channel::Base <|-- Channel
Channel <|-- LayerChannel
Channel <|-- PageChannel

' Front-End
class AppComponent {}

class NotebookComponent {}

class PageComponent {}

class LayerComponent {}

class PaperJs {
    +canvas : HTMLCanvas
    +project : Json
    +view : Json
}

AppComponent "1" *-- "1" NotebookComponent
NotebookComponent "1" *-- "1..n" PageComponent
PageComponent "1" *-- "2" LayerComponent
LayerComponent "1" *-- "1" LayerChannel
NotebookComponent "1" *-- "1" PageChannel
@enduml